# pyproject.toml

[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=61" ]

[project]
name = "ai-assistant-multi"
version = "1.5.3"
description = "A multi-provider CLI assistant for interacting with AI models (OpenAI, Google Gemini)."
readme = "README.md"
keywords = [ "ai", "assistant", "cli", "gemini", "gpt", "llm", "multi-provider", "openai", "terminal" ]

license = "MIT"
authors = [
  { name = "Sudharshan V", email = "sudarshan61kv@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Utilities",
]
# Runtime dependencies (remain the same)
dependencies = [
  "google-generativeai>=0.8.5",
  "openai>=1.75",
  "questionary>=2.1",
  "rich>=14",
  "typer[all]>=0.15.2",
]

# Optional: Add URLs for your project
urls.Homepage = "https://github.com/Sudharshan1409/assistant-cli"
urls.Repository = "https://github.com/Sudharshan1409/assistant-cli"

# --- Configure setuptools for src-layout --- <<< UPDATED SECTION
# Define the command-line script entry point - <<< UPDATED PATH
# Now points inside the package defined by the src layout
scripts.ai = "main:app"

[tool.setuptools.packages.find]
# Tells setuptools where to look for packages
where = [ "src" ]
# Tells setuptools to automatically find all packages under 'src'
# (it will find 'ai_assistant_multi' because it has an __init__.py)

# We no longer need py-modules or explicit packages list here
